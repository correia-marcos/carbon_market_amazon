# Required for increasing reproducibility
library(groundhog)            # You need to have at least R version = 4.3.1
# Required packages
pkgs <- c("ggplot2", "haven", "foreign", "dplyr", "sf", "sp",
"raster", "viridis", "cartography", "readxl", "RColorBrewer",
"ggplot2", "scpi")
# Load packages
groundhog.library(pkgs, "2023-09-01")
coverage_car <- read.csv2("Results/Final_base/car_coverage.csv")
projects <- sf::st_read("Results/base_afolu_complete")
legend <- read.csv("Data/Deforestation/Codigos-da-legenda-colecao-8.csv",
sep = ';')
data_car <- sf::st_read("Results/CAR_redd_atlas")
# Remove column "X" from coverage data
coverage_car <- coverage_car[, -which(names(coverage_car) == "X")]
order_columns <- c("id", "year", "X3", "X11", "X15", "X6", "X12", "X24", "X33", "X4", "X0",
"X41", "X29", "X30", "X9", "X39", "X21", "X20", "X25", "X35", "X5", "X23", "X62")
coverage_car <- dplyr::select(coverage_car, order_columns)
# Import the required datasets
coverage_car <- read.csv2("Results/Final_base/car_coverage.csv")
# Remove column "X" from coverage data and change column positions
coverage_car <- coverage_car[, -which(names(coverage_car) == "X")] %>%
select(order_columns)
# Remove column "X" from coverage data and change column positions
coverage_car <- coverage_car[, -which(names(coverage_car) == "X")] %>%
dplyr::select(order_columns)
View(coverage_car)
# Remove column "X" from coverage data and change column positions
order_columns <- c("id", "year",
"X3", "X4", "X5", "X6", # Forest class
"X11", "X12", "X29", # Non forest natural class
"X15", "X41", "X9", "X39", "X21", "X20", "X35", "X62", # Farming
"X23", "X24", "X30", "X25", # Non vegetated area
"X33", # Water
"X0") # Not observed
# Import the required datasets
coverage_car <- read.csv2("Results/Final_base/car_coverage.csv")
View(projects)
# Load packages
groundhog.library(pkgs, "2023-09-01")
# Required packages
pkgs <- c("ggplot2", "haven", "foreign", "dplyr", "sf", "sp",
"raster", "viridis", "cartography", "readxl", "RColorBrewer",
"ggplot2", "scpi", "lubridate")
# Required for increasing reproducibility
library(groundhog)            # You need to have at least R version = 4.3.1
# Load packages
groundhog.library(pkgs, "2023-09-01")
final_car <- read.csv2("Results/Final_base/final_car_pctg.csv")
final_redd <- read.csv2("Results/Final_base/final_redd_pctg.csv")
projects <- sf::st_read("Results/base_afolu_complete")
# Converting id_rgst column from projects to integer
projects <- projects %>%
mutate(id_rgst = as.integer(id_rgst))
# Creating final datasets
car_complete <- final_car %>%
left_join(projects, by = "id_rgst")
redd_complete <- final_redd %>%
left_join(projects, by = "id_rgst")
# Defining control and treatments
redd_treated <- redd_complete %>%
filter(prj_stt %in% c("Registered", "On Hold")) %>%
mutate(treatment = if_else(year(start) >= year, 0, 1))
car_control <- car_complete %>%
filter(!prj_stt %in% c("Registered", "On Hold")) %>%
mutate(treatment = 0)
df <- bind_rows(redd_treated, car_control)
data <- bind_rows(redd_treated, car_control)
rm(df)
colnames(data)
# =============================================================================
# =============================================================================
# Synthetic control estimation
# =============================================================================
# =============================================================================
df <- scdataMulti(data, id.var = "id_rgst", outcome.var = "Forest_pctg",
treatment.var = "treatment", time.var = "year", constant = TRUE,
cointegrated.data = TRUE,
cov.adj = list(c("constant", "trend")))
# =============================================================================
# =============================================================================
# Synthetic control estimation
# =============================================================================
# =============================================================================
df <- scdataMulti(data, id.var = "id_rgst", outcome.var = "Forest_pctg",
treatment.var = "treatment", time.var = "year", constant = TRUE,
cointegrated.data = TRUE)
res <- scest(df, w.constr = list("name" = "simplex"))
View(df)
scplotMulti(res)
respi <- scpi(df, w.constr = list("name" = "simplex"), cores = 1, sims = 50,
e.method = "gaussian")
# plot series
scplotMulti(respi, type = "series")
respi <- scpi(df, w.constr = list("name" = "simplex"), cores = 1, sims = 50,
e.method = "gaussian")
plot <- ggplot(toplot) + xlab("Date") + ylab("Outcome") +
geom_line(aes(x=Time, y=Y, colour=Type)) +
geom_point(aes(x=Time, y=Y, colour=Type), size=1.5) +
geom_vline(aes(xintercept=Tdate)) +
facet_wrap(~ID, ncol = 2) + theme(legend.position="bottom") +
scale_color_manual(name = "", values = c("black", "blue"),
labels = c("Treated", "Synthetic Control"))
# Required for increasing reproducibility
library(groundhog)            # You need to have at least R version = 4.3.1
# Required packages
pkgs <- c("ggplot2", "haven", "foreign", "dplyr", "sf", "sp",
"raster", "viridis", "ggplot2", "scpi", "lubridate")
# Load packages
groundhog.library(pkgs, "2023-09-01")
final_car <- read.csv2("Results/Final_base/final_car_pctg.csv")
final_redd <- read.csv2("Results/Final_base/final_redd_pctg.csv")
projects <- sf::st_read("Results/base_afolu_complete")
# Clear environment
rm(list = ls())
